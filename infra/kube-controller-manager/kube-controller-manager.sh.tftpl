#!/usr/bin/env bash
set -xeuo pipefail

if ! command -v /usr/local/bin/kube-apiserver &> /dev/null; then
  curl -s -O "https://storage.googleapis.com/kubernetes-release/release/v${k8s_version}/bin/linux/amd64/kube-apiserver"

  chmod +x kube-apiserver
  mv kube-apiserver /usr/local/bin/

  semanage fcontext -a -t bin_t /usr/local/bin/kube-apiserver || true
  restorecon -R -v /usr/local/bin
fi

if ! command -v /usr/local/bin/kube-controller-manager &> /dev/null; then
  curl -s -O "https://storage.googleapis.com/kubernetes-release/release/v${k8s_version}/bin/linux/amd64/kube-controller-manager"

  chmod +x kube-controller-manager
  mv kube-controller-manager /usr/local/bin/

  semanage fcontext -a -t bin_t /usr/local/bin/kube-controller-manager || true
  restorecon -R -v /usr/local/bin
fi

mkdir -p /var/lib/kubernetes

# ca
cp /home/ec2-user/ca-cert.pem /var/lib/kubernetes/ca.pem
cp /home/ec2-user/ca-key.pem /var/lib/kubernetes/ca-key.pem
# serviceaccount
cp /home/ec2-user/serviceaccount-cert.pem /var/lib/kubernetes/service-account.pem
cp /home/ec2-user/serviceaccount-key.pem /var/lib/kubernetes/service-account-key.pem

# kube-controller-manager
/usr/local/bin/kubectl config set-cluster kubernetes-the-hard-way \
  --certificate-authority=/var/lib/kubernetes/ca.pem \
  --embed-certs=true \
  --server=https://127.0.0.1:6443 \
  --kubeconfig=kube-controller-manager.kubeconfig

/usr/local/bin/kubectl config set-credentials system:kube-controller-manager \
  --client-certificate=controllermanager-cert.pem \
  --client-key=controllermanager-key.pem \
  --embed-certs=true \
  --kubeconfig=kube-controller-manager.kubeconfig

/usr/local/bin/kubectl config set-context default \
  --cluster=kubernetes-the-hard-way \
  --user=system:kube-controller-manager \
  --kubeconfig=kube-controller-manager.kubeconfig

/usr/local/bin/kubectl config use-context default --kubeconfig=kube-controller-manager.kubeconfig
chown kubernetes. kube-controller-manager.kubeconfig
mv kube-controller-manager.kubeconfig /var/lib/kubernetes/kube-controller-manager.kubeconfig


cat <<EOF | sudo tee /etc/systemd/system/kube-controller-manager.service
[Unit]
Description=Kubernetes Controller Manager
Documentation=https://github.com/kubernetes/kubernetes

[Service]
User=kubernetes
ExecStart=/usr/local/bin/kube-controller-manager \\
  --bind-address=0.0.0.0 \\
  --cluster-cidr=${cluster_cidr} \\
  --cluster-name=kubernetes \\
  --cluster-signing-cert-file=/var/lib/kubernetes/ca.pem \\
  --cluster-signing-key-file=/var/lib/kubernetes/ca-key.pem \\
  --kubeconfig=/var/lib/kubernetes/kube-controller-manager.kubeconfig \\
  --leader-elect=true \\
  --root-ca-file=/var/lib/kubernetes/ca.pem \\
  --service-account-private-key-file=/var/lib/kubernetes/service-account-key.pem \\
  --service-cluster-ip-range=${cluster_service_cidr} \\
  --use-service-account-credentials=true \\
  --v=2
Restart=on-failure
RestartSec=5

[Install]
WantedBy=multi-user.target
EOF

systemctl daemon-reload
systemctl enable kube-controller-manager
systemctl restart kube-controller-manager
