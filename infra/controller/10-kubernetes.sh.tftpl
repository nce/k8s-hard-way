#!/bin/bash
set -xe

if ! command -v /usr/local/bin/kubectl &> /dev/null; then
  curl -s -O "https://storage.googleapis.com/kubernetes-release/release/v${k8s_version}/bin/linux/amd64/kube-apiserver" \
    -O "https://storage.googleapis.com/kubernetes-release/release/v${k8s_version}/bin/linux/amd64/kube-controller-manager" \
    -O "https://storage.googleapis.com/kubernetes-release/release/v${k8s_version}/bin/linux/amd64/kube-scheduler" \
    -O "https://storage.googleapis.com/kubernetes-release/release/v${k8s_version}/bin/linux/amd64/kubectl"

  chmod +x kube-apiserver kube-controller-manager kube-scheduler kubectl
  mv kube-apiserver kube-controller-manager kube-scheduler kubectl /usr/local/bin/

  semanage fcontext -a -t bin_t /usr/local/bin/kube* || true
  restorecon -R -v /usr/local/bin
fi

mkdir -p /var/lib/kubernetes
mkdir -p /etc/kubernetes/config

# ca
cp /home/ec2-user/ca-cert.pem /var/lib/kubernetes/ca.pem
cp /home/ec2-user/ca-key.pem /var/lib/kubernetes/ca-key.pem

# Kubeconfig scheduler
/usr/local/bin/kubectl config set-cluster kubernetes-the-hard-way \
  --certificate-authority=/var/lib/kubernetes/ca.pem \
  --embed-certs=true \
  --server=https://127.0.0.1:6443 \
  --kubeconfig=kube-scheduler.kubeconfig

/usr/local/bin/kubectl config set-credentials system:kube-scheduler \
  --client-certificate=scheduler-cert.pem \
  --client-key=scheduler-key.pem \
  --embed-certs=true \
  --kubeconfig=kube-scheduler.kubeconfig

/usr/local/bin/kubectl config set-context default \
  --cluster=kubernetes-the-hard-way \
  --user=system:kube-scheduler \
  --kubeconfig=kube-scheduler.kubeconfig

/usr/local/bin/kubectl config use-context default --kubeconfig=kube-scheduler.kubeconfig
mv kube-scheduler.kubeconfig /var/lib/kubernetes/kube-scheduler.kubeconfig

# kube-controller-manager
/usr/local/bin/kubectl config set-cluster kubernetes-the-hard-way \
  --certificate-authority=/var/lib/kubernetes/ca.pem \
  --embed-certs=true \
  --server=https://127.0.0.1:6443 \
  --kubeconfig=kube-controller-manager.kubeconfig

/usr/local/bin/kubectl config set-credentials system:kube-controller-manager \
  --client-certificate=controllermanager-cert.pem \
  --client-key=controllermanager-key.pem \
  --embed-certs=true \
  --kubeconfig=kube-controller-manager.kubeconfig

/usr/local/bin/kubectl config set-context default \
  --cluster=kubernetes-the-hard-way \
  --user=system:kube-controller-manager \
  --kubeconfig=kube-controller-manager.kubeconfig

/usr/local/bin/kubectl config use-context default --kubeconfig=kube-controller-manager.kubeconfig
mv kube-controller-manager.kubeconfig /var/lib/kubernetes/kube-controller-manager.kubeconfig

/usr/local/bin/kubectl config set-cluster kubernetes-the-hard-way \
  --certificate-authority=ca-cert.pem \
  --embed-certs=true \
  --server=https://127.0.0.1:6443 \
  --kubeconfig=admin.kubeconfig

/usr/local/bin/kubectl config set-credentials admin \
  --client-certificate=admin-cert.pem \
  --client-key=admin-key.pem \
  --embed-certs=true \
  --kubeconfig=admin.kubeconfig

/usr/local/bin/kubectl config set-context default \
  --cluster=kubernetes-the-hard-way \
  --user=admin \
  --kubeconfig=admin.kubeconfig

/usr/local/bin/kubectl config use-context default --kubeconfig=admin.kubeconfig

cat <<EOF | sudo tee /etc/kubernetes/config/kube-scheduler.yaml
apiVersion: kubescheduler.config.k8s.io/v1beta2
kind: KubeSchedulerConfiguration
clientConnection:
  kubeconfig: "/var/lib/kubernetes/kube-scheduler.kubeconfig"
leaderElection:
  leaderElect: true
EOF

cat <<EOF | sudo tee /etc/systemd/system/kube-controller-manager.service
[Unit]
Description=Kubernetes Controller Manager
Documentation=https://github.com/kubernetes/kubernetes

[Service]
User=kubernetes
ExecStart=/usr/local/bin/kube-controller-manager \\
  --bind-address=0.0.0.0 \\
  --cluster-cidr=10.200.0.0/16 \\
  --cluster-name=kubernetes \\
  --cluster-signing-cert-file=/var/lib/kubernetes/ca.pem \\
  --cluster-signing-key-file=/var/lib/kubernetes/ca-key.pem \\
  --kubeconfig=/var/lib/kubernetes/kube-controller-manager.kubeconfig \\
  --leader-elect=true \\
  --root-ca-file=/var/lib/kubernetes/ca.pem \\
  --service-account-private-key-file=/var/lib/kubernetes/service-account-key.pem \\
  --service-cluster-ip-range=${cluster_service_ip}/24 \\
  --use-service-account-credentials=true \\
  --v=2
Restart=on-failure
RestartSec=5

[Install]
WantedBy=multi-user.target
EOF

cat <<EOF | sudo tee /etc/kubernetes/config/kube-scheduler.yaml
apiVersion: kubescheduler.config.k8s.io/v1beta1
kind: KubeSchedulerConfiguration
clientConnection:
  kubeconfig: "/var/lib/kubernetes/kube-scheduler.kubeconfig"
leaderElection:
  leaderElect: true
EOF

cat <<EOF | sudo tee /etc/systemd/system/kube-scheduler.service
[Unit]
Description=Kubernetes Scheduler
Documentation=https://github.com/kubernetes/kubernetes

[Service]
User=kubernetes
ExecStart=/usr/local/bin/kube-scheduler \\
  --config=/etc/kubernetes/config/kube-scheduler.yaml \\
  --v=2
Restart=on-failure
RestartSec=5

[Install]
WantedBy=multi-user.target
EOF

chown -R kubernetes. /var/lib/kubernetes
chown -R kubernetes. /etc/kubernetes/config

systemctl daemon-reload
systemctl enable  kube-controller-manager kube-scheduler
systemctl start  kube-controller-manager kube-scheduler
